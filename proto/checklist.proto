syntax = "proto3";

package proto;

option go_package = "checklist-go/proto";

import "google/protobuf/timestamp.proto";

// Соответствует запросу для POST /create
message CreateTaskRequest {
    string title = 1;
    string description = 2;
}

// Основной объект Задачи, который будет возвращаться в большинстве ответов
message Task {
    string id = 1;
    string title = 2;
    string description = 3;
    bool done = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
}

// Общий запрос для операций, где нужен только ID (DELETE /delete и PUT /done)
message TaskActionRequest {
    string id = 1;
}

// Ответ для DELETE /delete
message DeleteTaskResponse {
    bool success = 1;
}

// Запрос для GET /list (пока без параметров)
message ListTasksRequest {}

// Ответ для GET /list
message ListTasksResponse {
    repeated Task tasks = 1;
}

service ChecklistService {
    // Для POST /create
    rpc CreateTask(CreateTaskRequest) returns (Task);

    // Для GET /list
    rpc ListTasks(ListTasksRequest) returns (ListTasksResponse);

    // Для DELETE /delete
    rpc DeleteTask(TaskActionRequest) returns (DeleteTaskResponse);

    // Для PUT /done
    rpc MarkTaskDone(TaskActionRequest) returns (Task);
}